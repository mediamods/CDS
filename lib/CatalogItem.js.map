{"version":3,"file":"CatalogItem.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../pages/api/IconHooks.js","../pages/api/Catalog.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {\n  useMemo\n} from 'react';\n\nimport clsx from 'clsx';\n\nimport { \n  MenuIcon,\n  MinusIcon,\n  PlusIcon,\n  SearchIcon,\n  XIcon\n} from '@heroicons/react/outline';\n\nexport const ICON_CLOSE = 'ICON_CLOSE';\nexport const ICON_MENU = 'ICON_MENU';\nexport const ICON_MINUS = 'ICON_MINUS';\nexport const ICON_PLUS = 'ICON_PLUS';\nexport const ICON_SEARCH = 'ICON_SEARCH';\n\nexport const useIconButton = ( darkTheme, hoverToggle ) => {\n\n  const iconButtonClassName = useMemo( () => {\n\n    const classList = [\n      'group',\n      \n      'h-8',\n      'w-8',\n\n      darkTheme ? 'bg-black' : 'bg-white',\n\n      'rounded-full',\n      'flex',\n      'items-center',\n      'justify-center',\n\n      'cursor-pointer'\n    ];\n  \n    if (hoverToggle) {\n      classList.push(\n        'transition-bg',\n        'ease-bop',\n        'duration-300',\n        darkTheme ? 'hover:bg-white' : 'hover:bg-black',\n      );\n    }\n\n    const buttClassName = clsx(\n      classList,\n      hoverToggle\n    );\n\n    return buttClassName;\n\n  }, [\n    darkTheme\n  ] );\n\n  return iconButtonClassName;\n\n}\n\nexport const useIcon = ( darkTheme, hoverToggle, pIcon ) => {\n\n  const icon = useMemo( () => {\n    const classNames = getIconClassNames( darkTheme, hoverToggle );\n    return getIconJsx( pIcon, classNames );\n  }, [\n    darkTheme,\n    hoverToggle,\n    pIcon\n  ] );\n\n  return icon;\n};\n\nexport const useToggleIcon = ( darkTheme, pIconUnselected, pIconSelected ) => {\n\n};\n\nconst getIconClassNames = ( darkTheme, hoverToggle ) => {\n\n  const classList = [\n    'h-6',\n    'w-6',\n    'stroke-current',\n    darkTheme ? 'text-white' : 'text-black'\n  ];\n\n  if (hoverToggle) {\n    classList.push(\n      'transition-text',\n      'ease-bop',\n      'duration-300',\n      `${ darkTheme ? 'group-hover:text-black' : 'group-hover:text-white' }`\n    );    \n  }\n\n  const classNames = clsx( \n    classList\n  );\n  return classNames;\n};\n\nconst getIconJsx = ( pIcon, className ) => {\n  const icons = {\n    [ICON_CLOSE]:\n    <XIcon className={ className } />,\n    [ICON_MENU]:\n    <MenuIcon className={ className } />,\n    [ICON_MINUS]:\n    <MinusIcon className={ className } />,\n    [ICON_PLUS]:\n    <PlusIcon className={ className } />,\n    [ICON_SEARCH]:\n    <SearchIcon className={ className } />,\n  };\n  const icon = icons[pIcon];\n  return icon;  \n};","import {\n  Children,\n  cloneElement,\n  Fragment\n} from 'react';\n\nimport {\n  Disclosure\n} from '@headlessui/react'\n\nimport {\n  useIcon,\n  useIconButton\n} from './IconHooks.js';\n\nimport clsx from 'clsx';\n\nexport const Catalog = props => {\n\n  const pItems = props.items;\n\n  return (\n    cloneElement((\n    <div\n      className={ 'flex flex-col w-1/2' } >\n          {\n            Children.map(pItems, (child) =>\n              cloneElement(child, {\n                  style: { ...child.props.style, position: \"relative\" },\n              })\n          )}\n    </div>),{style: { ...{position: \"relative\"} }},\n  ))\n};\n\nexport const CatalogItem = props => {\n  const pTitle = props.title;\n  const pComponent = props.component;\n\n  return (\n    <Disclosure\n      key={ pTitle }\n    >\n\n      {({ open }) => (\n      cloneElement((\n      <div\n        className={ clsx(\n          'py-3',\n          'border-t',\n          //(idx === pItemsLen-1) ? 'border-b' : '',\n          'border-crimson',\n          'w-full'\n        ) } >\n\n        <DisclosureToggle\n          open={ open }\n          title={ pTitle }\n        />\n\n        {\n        cloneElement((\n          <Disclosure.Panel\n            //todo - tie to the width of the button?\n            className={ 'px-10' }\n\n          >\n            { pComponent }\n          </Disclosure.Panel>\n        ), {\n            style: { ...pComponent.style, position: \"relative\" },\n        })\n        }\n      </div>\n      ), {\n            style: { ...{position: \"relative\"} },\n      })\n      )}\n\n    </Disclosure>\n  );\n\n}\n\nconst DisclosureToggle = props => {\n\n  const pOpen = props.open;\n  const pTitle = props.title;\n\n  const iconButtonClass = useIconButton( pOpen, !pOpen );\n  const iconSpinClass = clsx(\n    'transition-rotate',\n    'ease-bop',\n    'duration-100',\n    'transform',\n    pOpen ? 'rotate-90' : 'rotate-0'\n  );\n  const iconClass = [iconButtonClass, iconSpinClass].join( ' ' );\n  const icon = useIcon( pOpen, !pOpen, pOpen ? 'ICON_MINUS' : 'ICON_PLUS' );\n\n  return (\n    <div\n      className={ 'flex gap-2' } >\n      \n      <Disclosure.Button \n        className={ iconClass } >\n        { icon }\n      </Disclosure.Button>\n\n      { pTitle }\n\n    </div>\n  );\n}"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","getIconClassNames","darkTheme","hoverToggle","classList","push","clsx","getIconJsx","pIcon","className","_jsx","XIcon","MenuIcon","MinusIcon","PlusIcon","SearchIcon","Catalog","props","pItems","items","cloneElement","Children","map","child","position","CatalogItem","pTitle","title","pComponent","component","Disclosure","open","_jsxs","DisclosureToggle","Panel","pOpen","iconClass","useMemo","join","icon","classNames","useIcon","Button"],"mappings":"y9BAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,+lRCTvC,IAoEDe,EAAoB,SAAEC,EAAWC,OAE/BC,EAAY,CAChB,MACA,MACA,iBACAF,EAAY,aAAe,qBAGzBC,GACFC,EAAUC,KACR,kBACA,WACA,yBACIH,EAAY,yBAA2B,2BAI5BI,EACjBF,IAKEG,EAAa,SAAEC,EAAOC,uBA5FF,aA+FtBC,EAACC,GAAMF,UAAYA,SA9FE,YAgGrBC,EAACE,GAASH,UAAYA,SA/FA,aAiGtBC,EAACG,GAAUJ,UAAYA,SAhGF,YAkGrBC,EAACI,GAASL,UAAYA,SAjGC,cAmGvBC,EAACK,GAAWN,UAAYA,QAEPD,ICtGRQ,EAAU,SAAAC,OAEfC,EAASD,EAAME,aAGnBC,EACAV,SACED,UAAY,+BAENY,EAASC,IAAIJ,GAAQ,SAACK,UACpBH,EAAaG,EAAO,CAChB/B,aAAY+B,EAAMN,MAAMzB,WAAOgC,SAAU,oBAG/C,CAAChC,WAAY,CAACgC,SAAU,gBAIvBC,EAAc,SAAAR,OACnBS,EAAST,EAAMU,MACfC,EAAaX,EAAMY,iBAGvBnB,EAACoB,YAIE,gBAAGC,IAAAA,YACJX,EACAY,SACEvB,UAAYH,EACV,OACA,4BAGA,oBAGFI,EAACuB,GACCF,KAAOA,EACPJ,MAAQD,IAIVN,EACEV,EAACoB,EAAWI,OAEVzB,UAAY,iBAGVmB,IAEH,CACCpC,aAAYoC,EAAWpC,WAAOgC,SAAU,kBAI3C,CACGhC,WAAY,CAACgC,SAAU,iBAlCvBE,IA2CNO,EAAmB,SAAAhB,ODhEMf,EAAWC,ECkElCgC,EAAQlB,EAAMc,KACdL,EAAST,EAAMU,MAUfS,EAAY,ED7EsBjC,GCqEOgC,EDnEnBE,GAAS,eAE7BjC,EAAY,CAChB,QAEA,MACA,MAEAF,EAAY,WAAa,WAEzB,eACA,OACA,eACA,iBAEA,yBAGEC,GACFC,EAAUC,KACR,gBACA,WACA,eACAH,EAAY,iBAAmB,kBAIbI,EACpBF,EACAD,KAKD,CApC0BD,ECqEUiC,KACjB7B,EACpB,oBACA,WACA,eACA,YACA6B,EAAQ,YAAc,aAE2BG,KAAM,KACnDC,EDlCe,SAAErC,EAAWC,EAAaK,UAElC6B,GAAS,eACdG,EAAavC,EAAmBC,EAAWC,UAC1CI,EAAYC,EAAOgC,KACzB,CACDtC,EACAC,EACAK,IC0BWiC,CAASN,GAAQA,EAAOA,EAAQ,aAAe,oBAG1DH,SACEvB,UAAY,uBAEZC,EAACoB,EAAWY,QACVjC,UAAY2B,WACVG,IAGFb"}