{"version":3,"file":"IconButton.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../pages/api/IconHooks.js","../pages/api/IconButton.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {\n  useMemo\n} from 'react';\n\nimport clsx from 'clsx';\n\nimport { \n  MenuIcon,\n  MinusIcon,\n  PlusIcon,\n  SearchIcon,\n  XIcon\n} from '@heroicons/react/outline';\n\nexport const ICON_CLOSE = 'ICON_CLOSE';\nexport const ICON_MENU = 'ICON_MENU';\nexport const ICON_MINUS = 'ICON_MINUS';\nexport const ICON_PLUS = 'ICON_PLUS';\nexport const ICON_SEARCH = 'ICON_SEARCH';\n\nexport const useIconButton = ( darkTheme, hoverToggle ) => {\n\n  const iconButtonClassName = useMemo( () => {\n\n    const classList = [\n      'group',\n      \n      'h-8',\n      'w-8',\n\n      darkTheme ? 'bg-black' : 'bg-white',\n\n      'rounded-full',\n      'flex',\n      'items-center',\n      'justify-center',\n\n      'cursor-pointer'\n    ];\n  \n    if (hoverToggle) {\n      classList.push(\n        'transition-bg',\n        'ease-bop',\n        'duration-300',\n        darkTheme ? 'hover:bg-white' : 'hover:bg-black',\n      );\n    }\n\n    const buttClassName = clsx(\n      classList,\n      hoverToggle\n    );\n\n    return buttClassName;\n\n  }, [\n    darkTheme\n  ] );\n\n  return iconButtonClassName;\n\n}\n\nexport const useIcon = ( darkTheme, hoverToggle, pIcon ) => {\n\n  const icon = useMemo( () => {\n    const classNames = getIconClassNames( darkTheme, hoverToggle );\n    return getIconJsx( pIcon, classNames );\n  }, [\n    darkTheme,\n    hoverToggle,\n    pIcon\n  ] );\n\n  return icon;\n};\n\nexport const useToggleIcon = ( darkTheme, pIconUnselected, pIconSelected ) => {\n\n};\n\nconst getIconClassNames = ( darkTheme, hoverToggle ) => {\n\n  const classList = [\n    'h-6',\n    'w-6',\n    'stroke-current',\n    darkTheme ? 'text-white' : 'text-black'\n  ];\n\n  if (hoverToggle) {\n    classList.push(\n      'transition-text',\n      'ease-bop',\n      'duration-300',\n      `${ darkTheme ? 'group-hover:text-black' : 'group-hover:text-white' }`\n    );    \n  }\n\n  const classNames = clsx( \n    classList\n  );\n  return classNames;\n};\n\nconst getIconJsx = ( pIcon, className ) => {\n  const icons = {\n    [ICON_CLOSE]:\n    <XIcon className={ className } />,\n    [ICON_MENU]:\n    <MenuIcon className={ className } />,\n    [ICON_MINUS]:\n    <MinusIcon className={ className } />,\n    [ICON_PLUS]:\n    <PlusIcon className={ className } />,\n    [ICON_SEARCH]:\n    <SearchIcon className={ className } />,\n  };\n  const icon = icons[pIcon];\n  return icon;  \n};","\nimport clsx from 'clsx';\n\nimport {\n  useIcon,\n  useIconButton\n} from './IconHooks.js';\n\nexport const IconButton = props => {\n\n  const pIcon = props.icon;\n  const pTheme = props.theme;\n  const darkTheme = pTheme === 'dark';\n\n  const memodButtonClass = useIconButton( darkTheme, true, false );\n  const memodIcon = useIcon( darkTheme, true, pIcon );\n\n  return (\n    <button\n      className={ memodButtonClass } >\n      { memodIcon }\n    </button>\n  );\n}"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","getIconClassNames","darkTheme","hoverToggle","classList","push","clsx","getIconJsx","pIcon","className","_jsx","XIcon","MenuIcon","MinusIcon","PlusIcon","SearchIcon","IconButton","props","icon","theme","memodButtonClass","useMemo","useIconButton","memodIcon","classNames","useIcon"],"mappings":"iUAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,+lRCTvC,IAoEDe,EAAoB,SAAEC,EAAWC,OAE/BC,EAAY,CAChB,MACA,MACA,iBACAF,EAAY,aAAe,qBAGzBC,GACFC,EAAUC,KACR,kBACA,WACA,yBACIH,EAAY,yBAA2B,2BAI5BI,EACjBF,IAKEG,EAAa,SAAEC,EAAOC,uBA5FF,aA+FtBC,EAACC,GAAMF,UAAYA,SA9FE,YAgGrBC,EAACE,GAASH,UAAYA,SA/FA,aAiGtBC,EAACG,GAAUJ,UAAYA,SAhGF,YAkGrBC,EAACI,GAASL,UAAYA,SAjGC,cAmGvBC,EAACK,GAAWN,UAAYA,QAEPD,IC/GRQ,EAAa,SAAAC,OAElBT,EAAQS,EAAMC,KAEdhB,EAAuB,SADde,EAAME,MAGfC,EDMqB,SAAElB,EAAWC,UAEZkB,GAAS,eAE7BjB,EAAY,CAChB,QAEA,MACA,MAEAF,EAAY,WAAa,WAEzB,eACA,OACA,eACA,iBAEA,yBAGEC,GACFC,EAAUC,KACR,gBACA,WACA,eACAH,EAAY,iBAAmB,kBAIbI,EACpBF,EACAD,KAKD,CACDD,IC3CuBoB,CAAepB,GAAW,GAC7CqB,EDiDe,SAAErB,EAAWC,EAAaK,UAElCa,GAAS,eACdG,EAAavB,EAAmBC,EAAWC,UAC1CI,EAAYC,EAAOgB,KACzB,CACDtB,EACAC,EACAK,ICzDgBiB,CAASvB,GAAW,EAAMM,UAG1CE,YACED,UAAYW,WACVG"}